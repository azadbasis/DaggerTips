// Generated by Dagger (https://google.github.io/dagger).
package com.daggertips.dagger;

import com.daggertips.model.Rims;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class WheelsModule_ProvideRimsFactory implements Factory<Rims> {
  private final WheelsModule module;

  public WheelsModule_ProvideRimsFactory(WheelsModule module) {
    this.module = module;
  }

  @Override
  public Rims get() {
    return provideInstance(module);
  }

  public static Rims provideInstance(WheelsModule module) {
    return proxyProvideRims(module);
  }

  public static WheelsModule_ProvideRimsFactory create(WheelsModule module) {
    return new WheelsModule_ProvideRimsFactory(module);
  }

  public static Rims proxyProvideRims(WheelsModule instance) {
    return Preconditions.checkNotNull(
        instance.provideRims(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
